passing-tone:
    pitches: >-
        [pitch for pitch in range(prevPitch + 1, nextPitch) if pitch % 12 in scale]
        if prevPitch < nextPitch else
        [pitch for pitch in range(prevPitch - 1, nextPitch, -1) if pitch % 12 in scale]
    conditions: []
upper-neighbor-tone:
    pitches: "next(prevPitch + x for x in range(1, 12) if (prevPitch + x) % 12 in scale)"
    conditions: ["prevPitch == nextPitch", "pitches[0] - prevPitch <= 2"]
lower-neighbor-tone:
    pitches: "next(prevPitch - x for x in range(1, 12) if (prevPitch - x) % 12 in scale)"
    conditions: ["prevPitch == nextPitch", "prevPitch - pitches[0] <= 2"]
appogiatura:
    pitches: >-
        next(nextPitch + x for x in range(1, 12) if (nextPitch + x) % 12 in scale)
        if prevPitch < nextPitch else
        next(nextPitch - x for x in range(1, 12) if (nextPitch - x) % 12 in scale)
    conditions: ["prevPitch != nextPitch", "abs(pitches[0] - nextPitch) <= 2"]
escape-tone:
    pitches: >-
        next(prevPitch - x for x in range(1, 12) if (prevPitch - x) % 12 in scale)
        if prevPitch < nextPitch else
        next(prevPitch + x for x in range(1, 12) if (prevPitch + x) % 12 in scale)
    conditions: ["prevPitch != nextPitch", "abs(pitches[0] - prevPitch) <= 2"]
suspension:
    pitches: "prevPitch"
    conditions: ["prevPitch in scale"]
anticipation:
    pitches: "nextPitch"
    conditions: ["nextPitch in scale"]
